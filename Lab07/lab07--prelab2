int cycle = 0;
int button = 0;
//row1= GPIOB->IDR & 0x00;    //PB(0) aka row1
//row2= GPIOB->IDR & 0x01;    //PB(1) aka row2
//row3= GPIOB->IDR & 0x02;    //PB(2) aka row3
//row4= GPIOB->IDR & 0x04;    //PB(3) aka row4

void PinSetup()
{

//PA pins 0-1 set as inputs
RCC->AHBENR     |= 0x01;             /*Enable GPIOA clock*/
GPIOA->MODER    &= (0xFFFFFFF0);    /*Clears Pins 0 and 1 as inputs*/
GPIOA->OSPEEDR  &= (0xFFFFFFF0);    /*Clears Pins 0 and 1 for speed settings*/
GPIOA->OSPEEDR  |= (0x0000000F);    /*Set Speed to 40MHz (high speed)*/
GPIOC->PUPDR    &= (0x0000000C);    /*pull-up*/

//Setup of PA0 and PA1 as interrupts
SYSCFG->EXTICR[0] &= 0xFFF0;        //clear bits for EXTI0 (00 for PA)
SYSCFG->EXTICR[0] &= 0xFF0F;        //clear bits for EXTI1 (00 for PA)
EXTI-> RTSR       |= 0x0000;        //Set EXTI0 as rising edge triggered
EXTI-> IMR         = 0x0000;        //Enable EXTIO
EXTI-> PR         |= 0x0000;        //Clear EXTI0 pending status
EXTI-> RTSR       |= 0x0001;        //Set EXTI1 as rising edge triggered
EXTI-> IMR         = 0x0001;        //Enable EXTI1
EXTI-> PR         |= 0x0001;        //Clear EXTI1 pending status
NVIC_ClearPendingIRQ(Pos_EXTI0);		//Clear NVIC pending status
NVIC_ClearPendingIRQ(Pos_EXTI1);		//Clear NVIC pending status
NVIC_EnableIRQ(Pos_EXTI0);          //Enable external interrupt 0
NVIC_EnableIRQ(Pos_EXTI1);          //Enable external interrupt 1

//Configure PB(0-3) as rows on keypad (inputs)
RCC->AHBENR     |= 0x02;             /*Enable GPIOB clock*/
GPIOC->MODER    &= (0xFFFFFF00);    //Clear Pins 0-3 to be set as inputs
GPIOC->OSPEEDR  &= (0xFFFFFF00);    //Clears pins 0-3 for speed settings
GPIOC->OSPEEDR  |= (0x000000FF);    //Set Speed to 40MHz (high speed)
GPIOC->PUPDR    &= (0xFFFFFF00);    //Clear Pins 0-3 for pull up, pull-down settings
GPIOC->PUPDR    |= (0x00000055);    //Set Pins 0-3 as pull up

//Configure PB(4-7) as columns on keypad (outputs)
GPIOC->MODER    &= (0xFFFF00FF);      //Clear pins 4-7 to be set as outputs
GPIOC->MODER    |= (0x00005500);      //Sets pins 4-7 as outputs
GPIOC->OSPEEDR  &= (0xFFFF00FF);      //Clears PB(4-7) for speed settings
GPIOC->OSPEEDR  |= (0x0000FF00);      //Sets speed to 40MHz (high speed)
GPIOC->PUPDR    &= (0xFFFF00FF);      //No pull-up, pull-down

//Configure PC() as output pins for LEDS for one's place
RCC->AHBENR     |= 0x04;             /*Enable GPIOC clock*/
GPIOC->MODER    &= (0xFFFFFF00);    /*Clear Pins 0-3 to be set as output*/
GPIOC->MODER    |= (0x00000055);    /*Sets Pins 0-3 in output mode*/
GPIOC->OSPEEDR  &= (0xFFFFFF00);    /*Clear Pins 0-3 for speed setting*/
GPIOC->OSPEEDR  |= (0x000000FF);    /*Set Speed to 40MHz (high speed)*/
GPIOC->PUPDR    &= (0xFFFFFF00);    /*No pull-up, pull-down*/

//Setup of TIM10
RCC->APB2ENR |= RCC_APB2ENR_TIM10EN;     //enable clock for TIM10
TIM10->PSC    = 159;                    //(9999 x 1599 ) /16E6 = 0.999275
TIM10->ARR    = 9999;                     //1 second delay
TIM10->DIER  |= 0x01;                    //UIE is bit 0
NVIC_ClearPendingIRQ(Pos_TIM10);        //clear NVIC pending status
TIM10->SR &= ~0x01;
NVIC_EnableIRQ(Pos_TIM10);

}


void actLEDs(int n, int l1, int l2, int l3, int l4)
{
  if (n == 0)
  {
    l1 = 0;
    l2 = 0;
    l3 = 0;
    l4 = 0;
  }
  else if (n == 1)
  {
    l1 = 1;
    l2 = 0;
    l3 = 0;
    l4 = 0;
  }
  else if (n == 2)
  {
    l1 = 0;
    l2 = 1;
    l3 = 0;
    l4 = 0;
  }
  else if (n == 3)
  {
    l1 = 1;
    l2 = 1;
    l3 = 0;
    l4 = 0;
  }
  else if (n == 4)
  {
    l1 = 0;
    l2 = 0;
    l3 = 1;
    l4 = 0;
  }
  else if (n == 5)
  {
    l1 = 1;
    l2 = 0;
    l3 = 1;
    l4 = 0;
  }
  else if (n == 6)
  {
    l1 = 0;
    l2 = 1;
    l3 = 1;
    l4 = 0;
  }
  else if (n == 7)
  {
    l1 = 1;
    l2 = 1;
    l3 = 1;
    l4 = 0;
  }
  else if (n == 8)
  {
    l1 = 0;
    l2 = 0;
    l3 = 0;
    l4 = 1;
  }
  else if (n == 9)
  {
    l1 = 1;
    l2 = 0;
    l3 = 0;
    l4 = 1;
  }
  else if (n == 10) //A
  {
    l1 = 0;
    l2 = 1;
    l3 = 0;
    l4 = 1;
  }
  else if (n == 11) //B
  {
    l1 = 1;
    l2 = 1;
    l3 = 0;
    l4 = 1;
  }
  else if (n == 12) //C
  {
    l1 = 0;
    l2 = 0;
    l3 = 1;
    l4 = 1;
  }
  else if (n == 13) //D
  {
    l1 = 1;
    l2 = 0;
    l3 = 1;
    l4 = 1;
  }
  else if (n == 14) //E
  {
    l1 = 0;
    l2 = 1;
    l3 = 1;
    l4 = 1;
  }
  else if (n == 15) //F
  {
    l1 = 1;
    l2 = 1;
    l3 = 1;
    l4 = 1;
  }

  led1 = l1;
  led2 = l2;
  led3 = l3;
  led4 = l4;
}


void EXTI0_IRQHandler (){

/*Scanning algorithm, column 1*/
  GPIOB-> BSRRH = 0x01;            //set column1 to 0
  if (row1 = 0){
        button = 1;}
    else if (row2 == 0){
        button = 4;}
    else if (row3 == 0){
        button = 7;}
    else if (row4 == 0){
        button = 14;}          //E
  GPIOB-> BSRRL = 0x01;             //return column1 to 1

/*Scanning algorithm, column 2*/
    GPIOB-> BSRRH = 0x02;            //set column2 to 0
    if (row1 = 0){
          button = 2;}
      else if (row2 == 0){
          button = 5;}
      else if (row3 == 0){
          button = 8;}
      else if (row4 == 0){
          button = 0;}
    GPIOB-> BSRRL = 0x02;             //return column2 to 1

/*Scanning algorithm, column 3*/
    GPIOB-> BSRRH = 0x04;            //set column3 to 0
      if (row1 = 0){
            button = 3;}
        else if (row2 == 0){
            button = 6;}
        else if (row3 == 0){
            button = 9;}
        else if (row4 == 0){
            button = 15;}          //F
      GPIOB-> BSRRL = 0x04;             //return column3 to 1

/*Scanning algorithm, column 4*/
          GPIOB-> BSRRH = 0x08;            //set column4 to 0
          if (row1 = 0){
                button = 10;}          //A
            else if (row2 == 0){
                button = 11;}          //B
            else if (row3 == 0){
                button = 12;}          //C
            else if (row4 == 0){
                button = 13;}          //D
          GPIOB-> BSRRL = 0x08;             //return column4 to 1

  actLEDs(button,led1,led2,led3,led4);
  Int = 5;

  NVIC_ClearPendingIRQ(6);								 //Clear NVIC pending status
  EXTI-> PR         |= 0x0000;         //Clear EXTI1 pending status
}


{

  actLEDs(button, l1, l2, l3, l4);
  }
*/

/*TimeBasedInterrupt ()
{
  if (cycle == 9)
  {
    //set output to low (0)
    cycle = 0;
  }
  else if (cycle <= button)
  {
    //set output to low (0)
    cycle++;
  }
  else
  {
    //set output to high (1)
    cycle++;
  }
}
*/

main ()
   {
     while(1) //Endless loop
{
      delay(); //0.5 second delay
      if (led1 == 0){
          GPIOC->BSRRH = 0x01;       /*set LED1 to 0*/
    }
      else{
          GPIOC->BSRRL = 0x01;      /*set LED1 to 1*/
    }

      if (led2 == 0){
          GPIOC->BSRRH = 0x02;       /*set LED2 to 0*/
    }
      else{
          GPIOC->BSRRL = 0x02;      /*set LED2 to 1*/
    }

      if (led3 == 0){
          GPIOC->BSRRH = 0x04;       /*set LED3 to 0*/
    }
      else{
          GPIOC->BSRRL = 0x04;      /*set LED3 to 1*/
    }
      if (led4 == 0){
          GPIOC->BSRRH = 0x08;       /*set LED4 to 0*/
    }
      else{
          GPIOC->BSRRL = 0x08;      /*set LED4 to 1*/
    }
    }
  }
