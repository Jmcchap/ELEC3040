#include "STM32L1xx.h"

int count = 0;

//set counter 1's LEDs
int led1 = 0; //state of LED1
int led2 = 0; //state of LED2
int led3 = 0; //state of LED3
int led4 = 0; //state of LED4

//set counter 2's LEDs
int led21 = 0; //state of LED1
int led22 = 0; //state of LED2
int led23 = 0; //state of LED3
int led24 = 0; //state of LED4

/*----------------------------------------------------------*/
/* Pin setup - initialize GPIO pins used in program */
/* PA1 - Switch 1 connected to DIO0 on the EEBoard */
/* PA2 - Switch 2 connected to DIO1 on the EEBoard */
/*----------------------------------------------------------*/

void PinSetup(){
/*Configure PC() as output pins for LEDS*/
RCC->AHBENR     |= 0x04;             /*Enable GPIOC clock*/
GPIOC->MODER    &= (0xFFFFFF00);    /*Clear Pins 0-3 to be set as output*/
GPIOC->MODER    |= (0x00000055);    /*Sets Pins 0-3 in output mode*/
GPIOC->OSPEEDR  &= (0xFFFFFF00);    /*Clear Pins 0-3 for speed setting*/
GPIOC->OSPEEDR  |= (0x000000FF);    /*Set Speed to 40MHz (high speed)*/
GPIOC->PUPDR    &= (0xFFFFFF00);    /*No pull-up, pull-down*/

//PC pins 4-7 for use with LEDS for second counter
GPIOC->MODER    &= (0xFFFF00FF);    //Clears Pins 4-7 to be set as output
GPIOC->MODER    |= (0x00005500);    //Sets Pins 4-7 in output mode
GPIOC->OSPEEDR  &= (0xFFFF00FF);    //Clear Pins 0-3 for speed setting
GPIOC->OSPEEDR  |= (0x0000FF00);    //Set Speed to 40MHz (high speed)
GPIOC->PUPDR     &= (0xFFFF00FF);    //No pull-up, pull down

//PC pins 8 and 9 for on-board LEDs indicating interrupts
GPIOC->MODER    &= (0xFFF0FFFF);    //Clears Pins 8 and 9 to be set as outputs
GPIOC->MODER    |= (0x00050000);    //Sets Pins 8 and 9 in output mode
GPIOC->OSPEEDR  &= (0x)

/*Configure PA() as input pins for interrupts*/
RCC->AHBENR     |= 0x01;             /*Enable GPIOA clock*/
GPIOA->MODER    &= (0xFFFFFFF0);    /*Clears Pins 1 and 2 as inputs*/
GPIOA->OSPEEDR  &= (0xFFFFFFF0);    /*Clears Pins 1 and 2 for speed settings*/
GPIOA->OSPEEDR  |= (0x0000000F);    /*Set Speed to 40MHz (high speed)*/
GPIOC->PUPDR    &= (0xFFFFFFF0);    /*No pull-up, pull-down*/

}






/*----------------------------------------------------------*/
/* Delay function 1 - 0.5 second delay */
/*----------------------------------------------------------*/
void delay ()
{
 int a,b;
 for (a=0; a<100; a++) { //outer loop
 for (b=0; b<12000; b++) { //inner loop
 }
 }
}



/*----------------------------------------------------------*/
/* set the states of corresponding LEDs based on a integer from 0 to 9 */
/*----------------------------------------------------------*/
void actLEDs1(int n, int l1, int l2, int l3, int l4)
{
  if (n == 0)
  {
    l1 = 0;
    l2 = 0;
    l3 = 0;
    l4 = 0;
  }
  else if (n == 1)
  {
    l1 = 1;
    l2 = 0;
    l3 = 0;
    l4 = 0;
  }
  else if (n == 2)
  {
    l1 = 0;
    l2 = 1;
    l3 = 0;
    l4 = 0;
  }
  else if (n == 3)
  {
    l1 = 1;
    l2 = 1;
    l3 = 0;
    l4 = 0;
  }
  else if (n == 4)
  {
    l1 = 0;
    l2 = 0;
    l3 = 1;
    l4 = 0;
  }
  else if (n == 5)
  {
    l1 = 1;
    l2 = 0;
    l3 = 1;
    l4 = 0;
  }
  else if (n == 6)
  {
    l1 = 0;
    l2 = 1;
    l3 = 1;
    l4 = 0;
  }
  else if (n == 7)
  {
    l1 = 1;
    l2 = 1;
    l3 = 1;
    l4 = 0;
  }
  else if (n == 8)
  {
    l1 = 0;
    l2 = 0;
    l3 = 0;
    l4 = 1;
  }
  else if (n == 9)
  {
    l1 = 1;
    l2 = 0;
    l3 = 0;
    l4 = 1;
  }

  led1 = l1;
  led2 = l2;
  led3 = l3;
  led4 = l4;
}

/*----------------------------------------------------------*/
/* set the states of corresponding LEDs in counter 2 based on 9-n*/
/*----------------------------------------------------------*/
void actLEDs2(int n, int l21, int l22, int l23, int l24)
{
n = 9-n;          //sets the "opposite" value for counter 1's n

  if (n == 0)
  {
    l21 = 0;
    l22 = 0;
    l23 = 0;
    l24 = 0;
  }
  else if (n == 1)
  {
    l21 = 1;
    l22 = 0;
    l23 = 0;
    l24 = 0;
  }
  else if (n == 2)
  {
    l21 = 0;
    l22 = 1;
    l23 = 0;
    l24 = 0;
  }
  else if (n == 3)
  {
    l21 = 1;
    l22 = 1;
    l23 = 0;
    l24 = 0;
  }
  else if (n == 4)
  {
    l21 = 0;
    l22 = 0;
    l23 = 1;
    l24 = 0;
  }
  else if (n == 5)
  {
    l21 = 1;
    l22 = 0;
    l23 = 1;
    l24 = 0;
  }
  else if (n == 6)
  {
    l21 = 0;
    l22 = 1;
    l23 = 1;
    l24 = 0;
  }
  else if (n == 7)
  {
    l21 = 1;
    l22 = 1;
    l23 = 1;
    l24 = 0;
  }
  else if (n == 8)
  {
    l21 = 0;
    l22 = 0;
    l23 = 0;
    l24 = 1;
  }
  else if (n == 9)
  {
    l21 = 1;
    l22 = 0;
    l23 = 0;
    l24 = 1;
  }

  led21 = l21;
  led22 = l22;
  led23 = l23;
  led24 = l24;
}


/*----------------------------------------------------------*/
/* counting1 function - reversible decade counter with LED display */
/*----------------------------------------------------------*/
void counting1 (int n, int l1, int l2, int l3, int l4)
{
    if (n>=9)   //Counter1 only counts up
      n = 0; //if count=9 roll over to 0
      else
      n++; //increment counter by one


  actLEDs1(n, l1, l2, l3, l4); //set states for LEDs on first counter
  count = n;
}

/*----------------------------------------------------------*/
/* counting2 function - reversible decade counter with LED display */
/*----------------------------------------------------------*/
void counting2 (int n, int countingDirection, int l21, int l22, int l23, int l24)
{
  if (countingDirection == 0) //count up
  {
    if (n>=9)
      n = 0; //if count=9 roll over to 0
      else
      n++; //increment counter by one
  }
    else //count down
  {
    if (n <= 0)
      n = 9; //if count=0 roll over to 9
      else
      n--; //decrement counter by one
  }

  actLEDs2(n, led21, led22, led23, led24); //set states for LEDs on second counter
  count = n;
}


/*----------------------------------------------------------*/
/* Main program */
/*----------------------------------------------------------*/
int main(void)
{
  int sw1=0;  		//state of SW1
  int sw2=0; 			//state of SW2

  PinSetup(); //Configure GPIO pins

  while(1) //Endless loop
  {
    //insert smart stuff about determining the values of sw1 and sw2 here

    sw1 = GPIOA->IDR & 0x01; //read GPIOA and mask all but bit 0
    sw2 = GPIOA->IDR & 0x02;  //read GPIOA and mask all but bit 1


      counting1(count,led1,led2,led3,led4); //increment counter and display values with LED
      delay(); //0.5 second delay for counter1
        if (led1 == 0){
            GPIOC->BSRRH = 0x01;       /*set LED1 to 0*/
      }
        else{
            GPIOC->BSRRL = 0x01;      /*set LED1 to 1*/
      }

        if (led2 == 0){
            GPIOC->BSRRH = 0x02;       /*set LED2 to 0*/
      }
        else{
            GPIOC->BSRRL = 0x02;      /*set LED2 to 1*/
      }

        if (led3 == 0){
            GPIOC->BSRRH = 0x04;       /*set LED3 to 0*/
      }
        else{
            GPIOC->BSRRL = 0x04;      /*set LED3 to 1*/
      }
        if (led4 == 0){
            GPIOC->BSRRH = 0x08;       /*set LED4 to 0*/
      }
        else{
            GPIOC->BSRRL = 0x08;      /*set LED4 to 1*/
      }


counting2(count,led21,led22,led23,led24); //increment counter and display values with LED for second counter


      //assinging an on/off value to the corresponding LEDs for LED2
      if (led21 == 0){
          GPIOC->BSRRH = 0x10;       /*set LED1 to 0*/
    }
      else{
          GPIOC->BSRRL = 0x10;      /*set LED1 to 1*/
    }

      if (led22 == 0){
          GPIOC->BSRRH = 0x20;       /*set LED2 to 0*/
    }
      else{
          GPIOC->BSRRL = 0x20;      /*set LED2 to 1*/
    }

      if (led23 == 0){
          GPIOC->BSRRH = 0x40;       /*set LED3 to 0*/
    }
      else{
          GPIOC->BSRRL = 0x40;      /*set LED3 to 1*/
    }
      if (led24 == 0){
          GPIOC->BSRRH = 0x80;       /*set LED4 to 0*/
    }
      else{
          GPIOC->BSRRL = 0x80;      /*set LED4 to 1*/
    }


  }
}
